content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="org.springframework.beans.factory.BeanFactoryAware"><rhs name\="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"/><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.beans.factory.config.PropertyResourceConfigurer"><rhs name\="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"/></lhs><lhs name\="org.springframework.beans.factory.config.BeanFactoryPostProcessor"><rhs name\="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"/></lhs><lhs name\="org.springframework.core.PriorityOrdered"><rhs name\="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"/></lhs><lhs name\="org.springframework.core.Ordered"><rhs name\="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"/></lhs><lhs name\="org.springframework.core.io.support.PropertiesLoaderSupport"><rhs name\="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"/></lhs><lhs name\="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"><rhs name\="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"/></lhs><lhs name\="org.springframework.beans.factory.FactoryBean"><rhs name\="org.springframework.context.support.ConversionServiceFactoryBean"/></lhs><lhs name\="org.springframework.beans.factory.InitializingBean"><rhs name\="org.springframework.context.support.ConversionServiceFactoryBean"/><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/><rhs name\="org.springframework.amqp.rabbit.core.RabbitAdmin"/><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.context.support.ConversionServiceFactoryBean"><rhs name\="org.springframework.context.support.ConversionServiceFactoryBean"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.Set"><rhs name\="java.util.HashSet"/></lhs><lhs name\="org.springframework.core.convert.converter.Converter"><rhs name\="com.apress.prospring5.ch10.StringToDateTimeConverter"/><rhs name\="com.apress.prospring5.ch10.SingerToAnotherSingerConverter"/></lhs><lhs name\="com.apress.prospring5.ch10.StringToDateTimeConverter"><rhs name\="com.apress.prospring5.ch10.StringToDateTimeConverter"/></lhs><lhs name\="org.springframework.beans.factory.support.BeanDefinitionRegistry"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.core.AliasRegistry"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.support.AbstractApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.ConfigurableApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.ApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.core.env.EnvironmentCapable"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.beans.factory.ListableBeanFactory"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.beans.factory.BeanFactory"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.beans.factory.HierarchicalBeanFactory"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.MessageSource"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.ApplicationEventPublisher"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.core.io.support.ResourcePatternResolver"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.core.io.ResourceLoader"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.Lifecycle"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="java.io.Closeable"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.core.io.DefaultResourceLoader"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.support.GenericApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="com.apress.prospring5.ch10.SingerToAnotherSingerConverter"><rhs name\="com.apress.prospring5.ch10.SingerToAnotherSingerConverter"/></lhs><lhs name\="org.springframework.validation.AbstractPropertyBindingResult"><rhs name\="org.springframework.validation.BeanPropertyBindingResult"/></lhs><lhs name\="org.springframework.validation.AbstractBindingResult"><rhs name\="org.springframework.validation.BeanPropertyBindingResult"/></lhs><lhs name\="org.springframework.validation.BindingResult"><rhs name\="org.springframework.validation.BeanPropertyBindingResult"/></lhs><lhs name\="org.springframework.validation.Errors"><rhs name\="org.springframework.validation.BeanPropertyBindingResult"/></lhs><lhs name\="org.springframework.validation.AbstractErrors"><rhs name\="org.springframework.validation.BeanPropertyBindingResult"/></lhs><lhs name\="org.springframework.validation.BeanPropertyBindingResult"><rhs name\="org.springframework.validation.BeanPropertyBindingResult"/></lhs><lhs name\="org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder"><rhs name\="org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder"/></lhs><lhs name\="java.lang.Enum"><rhs name\="org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"/><rhs name\="javax.persistence.TemporalType"/></lhs><lhs name\="java.util.Hashtable"><rhs name\="java.util.Properties"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.Properties"/></lhs><lhs name\="java.util.Dictionary"><rhs name\="java.util.Properties"/></lhs><lhs name\="java.util.Properties"><rhs name\="java.util.Properties"/></lhs><lhs name\="org.joda.time.ReadableDateTime"><rhs name\="org.joda.time.DateTime"/></lhs><lhs name\="org.joda.time.ReadableInstant"><rhs name\="org.joda.time.DateTime"/></lhs><lhs name\="org.joda.time.base.BaseDateTime"><rhs name\="org.joda.time.DateTime"/></lhs><lhs name\="org.joda.time.base.AbstractDateTime"><rhs name\="org.joda.time.DateTime"/></lhs><lhs name\="org.joda.time.base.AbstractInstant"><rhs name\="org.joda.time.DateTime"/></lhs><lhs name\="org.springframework.core.task.AsyncListenableTaskExecutor"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/></lhs><lhs name\="org.springframework.core.task.AsyncTaskExecutor"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/></lhs><lhs name\="org.springframework.core.task.TaskExecutor"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/><rhs name\="org.springframework.core.task.SimpleAsyncTaskExecutor"/></lhs><lhs name\="java.util.concurrent.Executor"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/><rhs name\="org.springframework.core.task.SimpleAsyncTaskExecutor"/></lhs><lhs name\="org.springframework.scheduling.SchedulingTaskExecutor"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/></lhs><lhs name\="org.springframework.scheduling.TaskScheduler"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/></lhs><lhs name\="org.springframework.scheduling.concurrent.ExecutorConfigurationSupport"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/></lhs><lhs name\="org.springframework.beans.factory.DisposableBean"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.scheduling.concurrent.CustomizableThreadFactory"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/></lhs><lhs name\="java.util.concurrent.ThreadFactory"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/></lhs><lhs name\="org.springframework.util.CustomizableThreadCreator"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/></lhs><lhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"><rhs name\="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"/></lhs><lhs name\="java.util.concurrent.Future"><rhs name\="org.springframework.scheduling.annotation.AsyncResult"/></lhs><lhs name\="java.util.Date"><rhs name\="java.util.Date"/></lhs><lhs name\="java.text.ParseException"><rhs name\="java.text.ParseException"/></lhs><lhs name\="com.rabbitmq.client.ShutdownListener"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="java.util.EventListener"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.AbstractConnectionFactory"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.ConnectionFactory"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="org.springframework.context.ApplicationContextAware"><rhs name\="org.springframework.amqp.rabbit.core.RabbitAdmin"/><rhs name\="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory"/><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.context.ApplicationEventPublisherAware"><rhs name\="org.springframework.amqp.rabbit.core.RabbitAdmin"/><rhs name\="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory"/><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.context.ApplicationListener"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="org.springframework.amqp.rabbit.core.RabbitOperations"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.core.AmqpTemplate"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.core.MessageListener"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.support.ListenerContainerAware"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.PublisherCallbackChannel$Listener"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.RabbitAccessor"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"><rhs name\="org.springframework.amqp.rabbit.core.RabbitTemplate"/></lhs><lhs name\="org.springframework.amqp.core.AmqpAdmin"><rhs name\="org.springframework.amqp.rabbit.core.RabbitAdmin"/></lhs><lhs name\="org.springframework.amqp.rabbit.core.RabbitAdmin"><rhs name\="org.springframework.amqp.rabbit.core.RabbitAdmin"/></lhs><lhs name\="org.springframework.amqp.core.AbstractExchange"><rhs name\="org.springframework.amqp.core.DirectExchange"/></lhs><lhs name\="org.springframework.amqp.core.Exchange"><rhs name\="org.springframework.amqp.core.DirectExchange"/></lhs><lhs name\="org.springframework.amqp.core.Declarable"><rhs name\="org.springframework.amqp.core.DirectExchange"/></lhs><lhs name\="org.springframework.amqp.core.AbstractDeclarable"><rhs name\="org.springframework.amqp.core.DirectExchange"/></lhs><lhs name\="org.springframework.amqp.core.DirectExchange"><rhs name\="org.springframework.amqp.core.DirectExchange"/></lhs><lhs name\="org.springframework.amqp.rabbit.config.AbstractRabbitListenerContainerFactory"><rhs name\="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.RabbitListenerContainerFactory"><rhs name\="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory"/></lhs><lhs name\="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory"><rhs name\="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.MessageListenerContainer"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.context.SmartLifecycle"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.context.Phased"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="java.lang.Number"><rhs name\="java.util.concurrent.atomic.AtomicLong"/></lhs><lhs name\="java.util.concurrent.atomic.AtomicLong"><rhs name\="java.util.concurrent.atomic.AtomicLong"/></lhs><lhs name\="com.example.demo.Greeting"><rhs name\="com.example.demo.Greeting"/></lhs><lhs name\="javax.script.ScriptEngineManager"><rhs name\="javax.script.ScriptEngineManager"/></lhs></history>
content_assist_number_of_computers=26
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
org.eclipse.jdt.ui.formatterprofiles.version=14
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="aspectj" deleted\="false" description\="adviceexecution pointcut (AspectJ)" enabled\="true" name\="adviceexecution">adviceexecution()</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after returning advice (AspectJ)" enabled\="true" name\="after_returning">after(${args}) returning() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after throwing advice (AspectJ)" enabled\="true" name\="after_throwing">after(${args}) throwing() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="around advice (AspectJ)" enabled\="true" name\="around">around(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="before advice (AspectJ)" enabled\="true" name\="before">before(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call constructor pointcut (AspectJ)" enabled\="true" name\="call_cons">call(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call method declaration (AspectJ)" enabled\="true" name\="call_method">call(${modifiers_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflow pointcut (AspectJ)" enabled\="true" name\="cflow">cflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflowbelow pointcut (AspectJ)" enabled\="true" name\="cflowbelow">cflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare error (AspectJ)" enabled\="true" name\="dece">declare error \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_extends">declare parents \: ${type_pattern} extends ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_implements">declare parents \: ${type_pattern} implements ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare soft (AspectJ)" enabled\="true" name\="decs">declare soft \: ${exception_type} \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare warning (AspectJ)" enabled\="true" name\="decw">declare warning \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a constructor pointcut (AspectJ)" enabled\="true" name\="execution_cons">execution(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a method pointcut (AspectJ)" enabled\="true" name\="execution_method">execution(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="get pointcut (AspectJ)" enabled\="true" name\="get">get(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="handler pointcut (AspectJ)" enabled\="true" name\="handler">handler(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="initialization pointcut (AspectJ)" enabled\="true" name\="initialization">initialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut declaration (AspectJ)" enabled\="true" name\="pc">pointcut ${name}() \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflow (AspectJ)" enabled\="true" name\="percflow">percflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflowbelow (AspectJ)" enabled\="true" name\="percflowbelow">percflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertarget (AspectJ)" enabled\="true" name\="pertarget">pertarget(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="perthis (AspectJ)" enabled\="true" name\="perthis">perthis(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertypewithin (AspectJ)" enabled\="true" name\="pertypewithin">pertypewithin(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut (AspectJ)" enabled\="true" name\="pointcut">pointcut ${name}(${args}) \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="preinitialization pointcut (AspectJ)" enabled\="true" name\="preinitialization">preinitialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="set pointcut (AspectJ)" enabled\="true" name\="set">set(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="staticinitialization pointcut (AspectJ)" enabled\="true" name\="staticinitialization">staticinitialization(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPoint (AspectJ)" enabled\="true" name\="thisJoinPoint">thisJoinPoint</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPointStaticPart (AspectJ)" enabled\="true" name\="thisJoinPointStaticPart">thisJoinPointStaticPart</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="within pointcut (AspectJ)" enabled\="true" name\="within">within(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a constructor pointcut (AspectJ)" enabled\="true" name\="withincode_cons">withincode(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a method pointcut (AspectJ)" enabled\="true" name\="withincode_method">withincode(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template></templates>
org.eclipse.jdt.ui.text.templates_migrated=true
spelling_locale_initialized=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
